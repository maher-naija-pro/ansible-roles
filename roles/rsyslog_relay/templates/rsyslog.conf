$MaxOpenFiles 2048
 
$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
$ModLoad imrelp # Load the input module ('im') 'relp'
#$InputRELPServerRun 20514 # Set the port to 20514
module(load="omkafka")
 
#### GLOBAL DIRECTIVES ####
 
# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
 
$template syslog,"/var/log/clients/%fromhost%/syslog.log"
 
template(
name="StoreLocationOutscale"
type="string"
string="<%pri%>%protocol-version% %timestamp:::date-rfc3339% %HOSTNAME% %app-name% %PROCID% %MSGID:1:32% - %msg%\n"
)
 
#### RULES ####
 
ruleset(name="sendToStore"
        queue.type="LinkedList"
        queue.size="100000"
        queue.spoolDirectory="/var/spool/rsyslog"
        queue.filename="queue_file_store"
        queue.saveonshutdown="on"
        queue.highwatermark="60000"
        queue.syncqueuefiles="on"){
   action(type="omfile" File="/var/log/messages")
}
 
input(type="imrelp" port="20515" ruleset="sendToStore")
#input(type="imuxsock" socket="/dev/log" ruleset="sendToStore")
 
ruleset(name="sendToKafka"
        queue.type="LinkedList"
        queue.size="100000"
        queue.spoolDirectory="/var/spool/rsyslog"
        queue.filename="queue_file_kafka"
        queue.saveonshutdown="on"
        queue.highwatermark="60000"
        queue.syncqueuefiles="on"){
    action(type="omkafka"
     confParam=[
       "security.protocol=ssl",
       "debug=all",
       "ssl.ca.location=/etc/pki/logmanagement.crt",
       "ssl.key.location=/etc/pki/{{ansible_hostname}}.key",
       "ssl.certificate.location=/etc/pki/{{ansible_hostname}}.crt"]
     topic="{{ ansible_hostname.split('-')[2] }}-IT"
     errorFile="/tmp/test"
     template="StoreLocationOutscale"
     resubmitOnFailure="on"
     broker=["euw2-1-kafka-01:9092,euw2-1-kafka-02:9092,euw2-1-kafka-03:9092"]
     )
}
input(type="imrelp" port="20514" ruleset="sendToKafka")
input(type="imuxsock" socket="/dev/log" ruleset="sendToKafka")
